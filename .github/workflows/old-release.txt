name: 'npm publish beta'

on:
  release:
    types: [prereleased]

jobs:
  publish-beta:
    name: 'puplish beta version to npm'
    runs-on: ubuntu-latest

    steps:
      - name: 'checkout code'
        uses: actions/checkout@v3

      - name: 'setup node.js'
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'yarn'

      - name: 'install dependencies'
        run: yarn install

      - name: build
        run: yarn build

      - name: 'set npm auth token'
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_PUBLISH_TOKEN }}" > ~/.npmrc

      - name: 'publish to npm'
        run: npm publish ./dist --tag beta
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}

      - name: 'verify published package'
        run: npm pack --dry-run

# V2
name: 'Release'

on:
  workflow_run:
    workflows: [CI]
    types:
      - completed
  push:
    branches:
      - 'main'
      - '3.0.0-beta'

permissions:
  contents: read

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance

    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 'Setup node.js'
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
      - name: 'Install dependencies'
        run: yarn install

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
        run: npx semantic-release
